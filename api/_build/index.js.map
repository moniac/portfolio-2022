{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../app/entry.server.tsx", "route-module:/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/root.tsx", "../../app/spotify.server.tsx", "../../app/components/NowPlaying.tsx", "route-module:/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/routes/blog/$slug.tsx", "../../app/blog.server.tsx", "../../utils/rehype-highlight-code.js", "../../utils/rehype-highlight-line.js", "../../utils/rehype-highlight-word.js", "../../utils/rehype-meta-attribute.js", "../../app/components/BlockQuote.tsx", "route-module:/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/routes/blog/index.tsx", "../../app/components/BlogCard.tsx", "route-module:/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/entry.server.tsx\";\nimport * as route0 from \"/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/root.tsx\";\nimport * as route1 from \"/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/routes/blog/$slug.tsx\";\nimport * as route2 from \"/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/routes/blog/index.tsx\";\nimport * as route3 from \"/Users/mohammedmulazada/Documents/GitHub/portfolio-2022/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/blog/$slug\": {\n    id: \"routes/blog/$slug\",\n    parentId: \"root\",\n    path: \"blog/:slug\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/blog/index\": {\n    id: \"routes/blog/index\",\n    parentId: \"root\",\n    path: \"blog\",\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route3\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import {\n  Link,\n  Links,\n  LiveReload,\n  LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from \"remix\";\nimport type { LinksFunction } from \"remix\";\nimport { GitHub, Linkedin, Twitter } from \"react-feather\";\n\nimport globalStylesUrl from \"~/styles/global.css\";\nimport darkStylesUrl from \"~/styles/dark.css\";\nimport { getPlaying } from \"./spotify.server\";\nimport { NowPlaying } from \"./components/NowPlaying\";\n\n// https://remix.run/api/app#links\nexport let links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    {\n      rel: \"stylesheet\",\n      href: darkStylesUrl,\n      // media: \"(prefers-color-scheme: dark)\",\n    },\n    // { rel: \"stylesheet\", href: tailwindStyles },\n  ];\n};\n\nexport let loader: LoaderFunction = async (data) => {\n  return await getPlaying();\n};\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>\n            Hey, developer, you should replace this with what you want your\n            users to see.\n          </p>\n        </div>\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }: { children: React.ReactNode }) {\n  const response = useLoaderData();\n\n  return (\n    <div className=\"remix-app\">\n      <header className=\"remix-app__header\">\n        <div className=\"container remix-app__header-content\">\n          <Link to=\"/\" title=\"Moniac\" className=\"remix-app__header-home-link\">\n            <MoniacLogo />\n          </Link>\n          <nav aria-label=\"Main navigation\" className=\"remix-app__header-nav\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/blog\">Blog</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <div className=\"remix-app__main\">\n        <div className=\"container remix-app__main-content\">{children}</div>\n      </div>\n\n      <div className=\"container\">\n        {!response?.spotifyError && <NowPlaying {...response} />}\n      </div>\n      <footer className=\"remix-app__footer\">\n        <div className=\"container remix-app__footer-content\">\n          <p>&copy; Mohammed Mulazada</p>\n\n          <div className=\"icons\">\n            <a target=\"_blank\" href=\"https://twitter.com/thisismoniac\">\n              <Twitter />\n            </a>\n            <a target=\"_blank\" href=\"https://github.com/moniac\">\n              <GitHub />\n            </a>\n            <a target=\"_blank\" href=\"https://twitter.com/thisismoniac\">\n              <Linkedin />\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nfunction MoniacLogo() {\n  return (\n    <svg\n      fill=\"currentColor\"\n      width=\"40\"\n      data-name=\"Layer 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 400 400\"\n    >\n      <path\n        className=\"cls-1\"\n        d=\"M261 157a155 155 0 0116 7l35-89h1v120a136 136 0 0124 41 159 159 0 015 15V34h-42l-47 119 8 4zM184 331h27l54-135a109 109 0 00-19-12l-4-2-44 113-45-113-4 2a109 109 0 00-18 12zM58 236a136 136 0 0124-41V75h1l35 89a155 155 0 0116-7l8-4L95 34H53v218a159 159 0 015-16z\"\n      ></path>\n    </svg>\n  );\n}\n", "const {\n  SPOTIFY_CLIENT_ID: client_id,\n  SPOTIFY_CLIENT_SECRET: client_secret,\n  SPOTIFY_REFRESH_TOKEN: refresh_token,\n} = process.env;\n\nconst basic = Buffer.from(`${client_id}:${client_secret}`).toString(\"base64\");\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`;\nconst RECENTLY_PLAYED_ENDPOINT = `https://api.spotify.com/v1/me/player/recently-played`;\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;\n\nconst getAccessToken = async () => {\n  const params = new URLSearchParams({\n    grant_type: \"refresh_token\",\n    refresh_token,\n  });\n  const response = await fetch(TOKEN_ENDPOINT, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Basic ${basic}`,\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: params.toString(),\n  });\n\n  return response.json();\n};\n\nconst getNowPlaying = async () => {\n  const { access_token } = await getAccessToken();\n\n  return fetch(NOW_PLAYING_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nconst getRecentlyPlayed = async () => {\n  const { access_token } = await getAccessToken();\n\n  return fetch(RECENTLY_PLAYED_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nexport const getPlaying = async () => {\n  let spotifyError = false;\n  try {\n    const response = await getNowPlaying();\n    const song = await response.json();\n\n    const isPlaying = song.is_playing;\n    const title = song.item.name;\n    const artist = song.item.artists.map((_artist) => _artist.name).join(\", \");\n    const album = song.item.album.name;\n    const albumImageUrl = song.item.album.images[1].url;\n    const songUrl = song.item.external_urls.spotify;\n\n    return {\n      album,\n      albumImageUrl,\n      artist,\n      isPlaying,\n      songUrl,\n      title,\n      spotifyError,\n    };\n  } catch (error) {}\n\n  try {\n    const recentlyPlayedResponse = await getRecentlyPlayed();\n    const formattedRecentlyPlayed = await recentlyPlayedResponse.json();\n    const firstRecentlyPlayed = formattedRecentlyPlayed.items[0];\n\n    return {\n      isPlaying: false,\n      album: firstRecentlyPlayed.track.album.name,\n      artist: firstRecentlyPlayed.track.album.artists\n        .map((_artist) => _artist.name)\n        .join(\", \"),\n      title: firstRecentlyPlayed.track.name,\n      albumImageUrl: firstRecentlyPlayed.track.album.images[1].url,\n      songUrl: firstRecentlyPlayed.track.external_urls.spotify,\n      spotifyError,\n    };\n  } catch (error) {\n    spotifyError = true;\n  }\n\n  return { spotifyError };\n};\n", "interface Props {\n  title: string;\n  artist: string;\n  albumImageUrl: string;\n  isPlaying: boolean;\n}\n\nexport const NowPlaying = (props: Props) => {\n  const { title, artist, albumImageUrl, isPlaying } = props;\n\n  const renderText = () => {\n    if (isPlaying) {\n      return (\n        <>\n          <i>Currently</i>, I am listening to <b>{title}</b> by <b>{artist}</b>.\n        </>\n      );\n    }\n\n    return (\n      <>\n        I was listening to <b>{title}</b> by <b>{artist}</b>.\n      </>\n    );\n  };\n  return (\n    <div className=\"now-playing\">\n      <p>{renderText()}</p>\n      <img src={albumImageUrl} />\n    </div>\n  );\n};\n", "import { useMemo } from \"react\";\nimport {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n  useLoaderData,\n} from \"remix\";\nimport { getMDXComponent } from \"mdx-bundler/client\";\nimport { getPost } from \"~/blog.server\";\nimport stylesUrl from \"../../styles/blog/post.css\";\nimport { BlockQuote } from \"~/components/BlockQuote\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  if (!params.slug) {\n    return \"expected a \uD83D\uDC0C!\";\n  }\n  return getPost(params.slug);\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n  const {\n    title,\n    frontmatter: { teaser },\n  } = data;\n  return {\n    title: data ? title : \"Oops...\",\n    description: teaser,\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nconst components = {\n  code: (props) => {\n    return <code {...props} />;\n  },\n  blockquote: (props) => {\n    return <BlockQuote {...props} />;\n  },\n};\n\nexport default function PostSlug() {\n  const result = useLoaderData();\n  const { html: code, readingTime } = result;\n\n  const Component = useMemo(() => getMDXComponent(code), [code]);\n\n  return (\n    <main className=\"flow post\">\n      <h1>{result.title}</h1>\n      <em>{readingTime.text} approx.</em>\n      <Component components={components} />\n    </main>\n  );\n}\n", "import path from \"path\";\nimport fs from \"fs/promises\";\nimport parseFrontMatter from \"front-matter\";\nimport { bundleMDX } from \"mdx-bundler\";\nimport readingTime from \"reading-time\";\nimport rehypeHighlightCode from \"../utils/rehype-highlight-code\";\nimport rehypeMetaAttribute from \"../utils/rehype-meta-attribute\";\nimport rehypeTOC from \"@jsdevtools/rehype-toc\";\nimport rehypeSlug from \"rehype-slug\";\n\nexport type Post = {\n  slug: string;\n  title: string;\n  frontmatter: {\n    title: string;\n    teaser: string;\n  };\n};\n\n// relative to the server output not the source!\nconst postsPath = path.join(__dirname, \"../..\", \"posts\");\n\nexport async function getPosts() {\n  const dir = await fs.readdir(postsPath);\n  return Promise.all(\n    dir.map(async (filename) => {\n      const file = await fs.readFile(path.join(postsPath, filename));\n      const { attributes } = parseFrontMatter(file.toString());\n\n      return {\n        slug: filename.replace(/\\.mdx$/, \"\"),\n        title: attributes.title,\n        frontmatter: attributes,\n      };\n    })\n  );\n}\n\nexport async function getPost(slug: string) {\n  const filepath = path.join(postsPath, slug + \".mdx\");\n\n  const file = await fs.readFile(filepath);\n  const postContent = file.toString();\n\n  const result = await bundleMDX({\n    file: filepath,\n    xdmOptions(options) {\n      options.rehypePlugins = [\n        ...(options.rehypePlugins ?? []),\n        rehypeSlug,\n        rehypeTOC,\n        rehypeMetaAttribute,\n        rehypeHighlightCode,\n      ];\n\n      return options;\n    },\n  });\n  console.log(result, \"___@@@\");\n  return {\n    slug,\n    html: result.code,\n    title: result.frontmatter.title,\n    readingTime: readingTime(postContent),\n    frontmatter: result.frontmatter,\n  };\n}\n", "import rangeParser from \"parse-numeric-range\";\nimport visit from \"unist-util-visit\";\nimport nodeToString from \"hast-util-to-string\";\nimport refractor from \"refractor\";\nimport highlightLine from \"./rehype-highlight-line\";\nimport highlightWord from \"./rehype-highlight-word\";\n\nexport default (options = {}) => {\n  return (tree) => {\n    visit(tree, \"element\", visitor);\n  };\n\n  function visitor(node, index, parentNode) {\n    if (parentNode.tagName === \"pre\" && node.tagName === \"code\") {\n      // syntax highlight\n      const lang = node.properties.className\n        ? node.properties.className[0].split(\"-\")[1]\n        : \"md\";\n      let result = refractor.highlight(nodeToString(node), lang);\n\n      // line highlight\n      const linesToHighlight = rangeParser(node.properties.line || \"0\");\n      result = highlightLine(result, linesToHighlight);\n\n      // word highlight\n      result = highlightWord(result);\n\n      node.children = result;\n    }\n  }\n};\n", "import hastToHtml from \"hast-util-to-html\";\nimport unified from \"unified\";\nimport parse from \"rehype-parse\";\n\nconst lineNumberify = function lineNumberify(ast, lineNum = 1) {\n  let lineNumber = lineNum;\n  return ast.reduce(\n    (result, node) => {\n      if (node.type === \"text\") {\n        if (node.value.indexOf(\"\\n\") === -1) {\n          node.lineNumber = lineNumber;\n          result.nodes.push(node);\n          return result;\n        }\n\n        const lines = node.value.split(\"\\n\");\n        for (let i = 0; i < lines.length; i++) {\n          if (i !== 0) ++lineNumber;\n          if (i === lines.length - 1 && lines[i].length === 0) continue;\n          result.nodes.push({\n            type: \"text\",\n            value: i === lines.length - 1 ? lines[i] : `${lines[i]}\\n`,\n            lineNumber: lineNumber,\n          });\n        }\n\n        result.lineNumber = lineNumber;\n        return result;\n      }\n\n      if (node.children) {\n        node.lineNumber = lineNumber;\n        const processed = lineNumberify(node.children, lineNumber);\n        node.children = processed.nodes;\n        result.lineNumber = processed.lineNumber;\n        result.nodes.push(node);\n        return result;\n      }\n\n      result.nodes.push(node);\n      return result;\n    },\n    { nodes: [], lineNumber: lineNumber }\n  );\n};\n\nconst wrapLines = function wrapLines(ast, linesToHighlight) {\n  const highlightAll =\n    linesToHighlight.length === 1 && linesToHighlight[0] === 0;\n  const allLines = Array.from(new Set(ast.map((x) => x.lineNumber)));\n  let i = 0;\n  const wrapped = allLines.reduce((nodes, marker) => {\n    const line = marker;\n    const children = [];\n    for (; i < ast.length; i++) {\n      if (ast[i].lineNumber < line) {\n        nodes.push(ast[i]);\n        continue;\n      }\n\n      if (ast[i].lineNumber === line) {\n        children.push(ast[i]);\n        continue;\n      }\n\n      if (ast[i].lineNumber > line) {\n        break;\n      }\n    }\n\n    nodes.push({\n      type: \"element\",\n      tagName: \"div\",\n      properties: {\n        dataLine: line,\n        className: \"highlight-line\",\n        dataHighlighted:\n          linesToHighlight.includes(line) || highlightAll ? \"true\" : \"false\",\n      },\n      children: children,\n      lineNumber: line,\n    });\n\n    return nodes;\n  }, []);\n\n  return wrapped;\n};\n\n// https://github.com/gatsbyjs/gatsby/pull/26161/files\nconst MULTILINE_TOKEN_SPAN =\n  /<span class=\"token ([^\"]+)\">[^<]*\\n[^<]*<\\/span>/g;\n\nconst applyMultilineFix = function (ast) {\n  // AST to HTML\n  let html = hastToHtml(ast);\n\n  // Fix JSX issue\n  html = html.replace(MULTILINE_TOKEN_SPAN, (match, token) =>\n    match.replace(/\\n/g, `</span>\\n<span class=\"token ${token}\">`)\n  );\n\n  // HTML to AST\n  const hast = unified()\n    .use(parse, { emitParseErrors: true, fragment: true })\n    .parse(html);\n\n  return hast.children;\n};\n\nexport default (ast, lines) => {\n  const formattedAst = applyMultilineFix(ast);\n  const numbered = lineNumberify(formattedAst).nodes;\n\n  return wrapLines(numbered, lines);\n};\n", "import hastToHtml from \"hast-util-to-html\";\nimport unified from \"unified\";\nimport parse from \"rehype-parse\";\n\nconst CALLOUT = /__(.*?)__/g;\n\nexport default (code) => {\n  const html = hastToHtml(code);\n  const result = html.replace(\n    CALLOUT,\n    (_, text) => `<span class=\"highlight-word\">${text}</span>`\n  );\n  const hast = unified()\n    .use(parse, { emitParseErrors: true, fragment: true })\n    .parse(result);\n  return hast.children;\n};\n", "import visit from \"unist-util-visit\";\n\nvar re = /\\b([-\\w]+)(?:=(?:\"([^\"]*)\"|'([^']*)'|([^\"'\\s]+)))?/g;\n\nexport default (options = {}) => {\n  return (tree) => {\n    visit(tree, \"element\", visitor);\n  };\n\n  function visitor(node, index, parentNode) {\n    var match;\n\n    if (node.tagName === \"code\" && node.data && node.data.meta) {\n      re.lastIndex = 0; // Reset regex.\n\n      while ((match = re.exec(node.data.meta))) {\n        node.properties[match[1]] = match[2] || match[3] || match[4] || \"\";\n        parentNode.properties[match[1]] =\n          match[2] || match[3] || match[4] || \"\";\n      }\n    }\n  }\n};\n", "interface Props {\n  children: React.ReactNode;\n}\n\nexport const BlockQuote = (props: Props) => {\n  const { children } = props;\n\n  return <blockquote className=\"BlockQuote\">{children}</blockquote>;\n};\n", "import { Link, MetaFunction, useLoaderData } from \"remix\";\nimport { getPosts, Post } from \"~/blog.server\";\nimport { BlogCard } from \"../../components/BlogCard\";\n\nexport const loader = () => {\n  return getPosts();\n};\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Blog\",\n    description: \"A collection of my blog posts.\",\n  };\n};\n\nexport default () => {\n  const posts = useLoaderData<Post[]>();\n\n  return (\n    <div>\n      <h1>Blog</h1>\n      <ul className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {posts.map((post) => (\n          <li key={post.slug}>\n            <BlogCard\n              title={post.title}\n              teaser={post.frontmatter.teaser}\n              link={post.slug}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n", "import { Link } from \"remix\";\n\nexport const BlogCard = (props) => {\n  const { title, teaser, link } = props;\n\n  return (\n    <div className=\"\">\n      <div className=\"max-w-4xl px-10 py-6 bg-white rounded-lg shadow-md\">\n        {/* <div className=\"flex items-center justify-between\">\n          <span className=\"font-light text-gray-600\">Jun 1, 2020</span>\n          <a\n            href=\"#\"\n            className=\"px-2 py-1 font-bold text-gray-100 bg-gray-600 rounded hover:bg-gray-500\"\n          >\n            Laravel\n          </a>\n        </div> */}\n        <div className=\"mt-2\">\n          <a\n            href=\"#\"\n            className=\"text-2xl font-bold text-gray-700 hover:underline\"\n          >\n            {title}\n          </a>\n          <p className=\"mt-2 text-gray-600\">{teaser}</p>\n        </div>\n        <div className=\"flex items-center justify-between mt-4\">\n          <Link className=\"text-blue-500 hover:underline\" to={link}>\n            Read more\n          </Link>\n          {/* <div>\n            <a href=\"#\" className=\"flex items-center\">\n              <img\n                src=\"https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=731&amp;q=80\"\n                alt=\"avatar\"\n                className=\"hidden object-cover w-10 h-10 mx-4 rounded-full sm:block\"\n              />\n              <h1 className=\"font-bold text-gray-700 hover:underline\">\n                Alex John\n              </h1>\n            </a>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import { ComponentType } from \"react\";\nimport type { MetaFunction, LoaderFunction } from \"remix\";\nimport { useLoaderData, json, Link } from \"remix\";\nimport * as Icon from \"react-feather\";\n\ntype IndexData = {\n  resources: Array<{ name: string; url: string }>;\n  experience: Array<{\n    title: string;\n    description: string;\n    date: string;\n    icon?: ComponentType | keyof JSX.IntrinsicElements | string;\n  }>;\n};\n\n// Loaders provide data to components and are only ever called on the server, so\n// you can connect to a database or run any server side code you want right next\n// to the component that renders it.\n// https://remix.run/api/conventions#loader\nexport let loader: LoaderFunction = () => {\n  let data: IndexData = {\n    resources: [\n      {\n        name: \"Remix Docs\",\n        url: \"https://remix.run/docs\",\n      },\n      {\n        name: \"React Router Docs\",\n        url: \"https://reactrouter.com/docs\",\n      },\n      {\n        name: \"Remix Discord\",\n        url: \"https://discord.gg/VBePs6d\",\n      },\n    ],\n    experience: [\n      {\n        title: \"Promoted to medior FE \uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDCBB\",\n        description: `Having worked at de Bijenkorf for a little over a year, I got promoted to medior FE. I gained a lot of experience\n        due to the unique challenges a large, growing website can face, together with the support and guidance of my team members.`,\n        date: \"Nov 2021 - Present\",\n        icon: \"ThumbsUp\",\n      },\n      {\n        title: \"Joined de Bijenkorf! \uD83D\uDC1D\",\n        description: `I had always wanted to work at a larger company on a product that is used by many many users. The Bijenkorf\n        website is one of the most popular webshops in the Netherlands. I joined the amazing Checkout team, which suddenly meant\n        I was responsible for making sure millions of customers could checkout successfully. An initially intimidating challenge which\n        turned out to be a great learning experience.`,\n        date: \"July 2020\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Started a company \uD83E\uDDD9\u200D\u2642\uFE0F\",\n        description: `Together with two of my good friends, we started Level30Wizards,\n        a digital agency focussed on delivering high quality websites and web applications.`,\n        date: \"Aug 2018 - Oct 2020\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Started working at Lifely\",\n        description: `Since the internship went so well, I was offered a part-time job, which turned into a full-time job.`,\n        date: \"Jan 2019 - Dec 2019\",\n        icon: \"Briefcase\",\n      },\n      {\n        title:\n          \"Finished my study at the Amsterdam University of Applied Sciences \uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF93\",\n        description: `After 4 years, I was finally done with my study.\n        I was very happy with my time there, and it felt bittersweet to leave the place that taught me a lot and I called my second home.`,\n        date: \"July 2019\",\n        icon: \"Edit2\",\n      },\n      {\n        title: \"Second intership\",\n        description: `Having some experience, I wanted to join a company that that could help me elevate my skills.\n        Lifely was that company.\n        Here I learned a lot about professional web development and got a lot of experience in React and TypeScript.`,\n        date: \"Sept 2018 - Jan 2019\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Part-time front-end job\",\n        description:\n          \"I joined LemonCake to work on a project for the trendy vegan restaurant: mr & mrs. watson.\",\n        date: \"Sept 2017 - Nov 2017\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"My first front-end intership\",\n        description: `At Diffuse I got to work with a small team of developers and got to learn a lot about the front-end development process. \n          This was an excellent internship to help me shape my skills and confirm that this was what I wanted to keep doing.`,\n        date: \"Apr 2015 - June 2017\",\n        icon: \"Briefcase\",\n      },\n      {\n        title:\n          \"Started my study at the Amsterdam University of Applied Sciences\",\n        description: `Working with film editing programs like Adobe After Effects and Adobe Premiere exposed me to scripting,\n        which always intrigued me. I found that this study contained a lot interesting programs, including web development, so I decided to continue my studies.`,\n        date: \"Sept 2015\",\n        icon: \"Edit2\",\n      },\n      {\n        title: \"Started a part-time job at a tech store for LG\",\n        description:\n          \"I sold LG household appliances, though my time was short I did learn a lot about talking directly to customers.\",\n        date: \"Jan 2015 - April 2015\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Finished my film study\",\n        description: `Managed to get a degree in film. As much as I enjoyed my time here, I felt ultimately\n         that film was more suited as a hobby than a career.`,\n        date: \"2015\",\n        icon: \"Edit2\",\n      },\n      {\n        title: \"Second Film intership at Guerilla\",\n        description: `Guerilla, known worldwide for its games such as Killzone and Horizon.\n          I worked on the trailers and teasers for the games, and also setup livestreams.`,\n        date: \"Sep 2014 - Jan 2015\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Started my first internship\",\n        description: `My first internship was at VDO, \n        back then it was a small team existing of just the three founders and me. \n        I had a great time there and gained quite some experience.`,\n        date: \"Feb 2014 - June 2014\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Started a film & animation study\",\n        description:\n          \"I was always fascinated by film, and figured that was what I wanted to do.\",\n        date: \"2011\",\n        icon: \"Edit2\",\n      },\n      {\n        title: \"Started working in a restaurant\",\n        description: \"Had to start somewhere!\",\n        date: \"April 2009 - June 2011\",\n        icon: \"Briefcase\",\n      },\n      {\n        title: \"Moved to Amsterdam\",\n        description:\n          \"My parents immigrated to the Netherlands in hopes of giving me better chances to succeed in life.\",\n        date: \"Approx 1995\",\n        icon: \"Home\",\n      },\n      {\n        title: \"Born \",\n        description: \"Where it all began.\",\n        date: \"July 1994\",\n        icon: \"Smile\",\n      },\n    ],\n  };\n\n  // https://remix.run/api/remix#json\n  return json(data);\n};\n\n// https://remix.run/api/conventions#meta\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Home | Portfolio of Mohammed Mulazada\",\n    description:\n      \"This is the portfolio of Mohammed Mulazada, a front-end developer based in Amsterdam.\",\n  };\n};\n\n// https://remix.run/guides/routing#index-routes\nexport default function Index() {\n  const { experience } = useLoaderData<IndexData>();\n\n  return (\n    <div className=\"remix__page\">\n      <main className=\"flow\">\n        <div className=\"flow\">\n          <h2>Welcome to my portfolio!</h2>\n          <p>\n            This is my little place on the internet. You can find out more about\n            me here, or what I write about.\n          </p>\n        </div>\n        <div className=\"about-mo flow\">\n          <h2>\n            About <strike>Me</strike> Mo\n          </h2>\n          <div>\n            <ol className=\"timeline\">\n              {experience.map((item) => {\n                const label = item.icon || \"Search\";\n                const IconComponent = Icon[label];\n                return (\n                  <li key={item.title} className=\"timeline-list\">\n                    <div className=\"timeline-meta\">\n                      <span className=\"timeline-icon\">{<IconComponent />}</span>\n                    </div>\n                    <div className=\"timeline-description\">\n                      <h4>{item.title}</h4>\n                      <p>{item.date}</p>\n                      <p className=\"timeline__content\">{item.description}</p>\n                    </div>\n                  </li>\n                );\n              })}\n            </ol>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
